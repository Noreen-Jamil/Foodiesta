[{"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\App.js":"1","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\index.js":"2","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\welcome\\welcome.js":"3","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\listOfRecipes.js":"4","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\recipeDetails\\recipeDetails.js":"5","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\options\\options.js":"6","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\categories\\categories.js":"7","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\apiService.js":"8","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\header\\header.js":"9","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\about\\about.js":"10","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\footer\\footer.js":"11"},{"size":1456,"mtime":1606645790297,"results":"12","hashOfConfig":"13"},{"size":231,"mtime":1606475621458,"results":"14","hashOfConfig":"13"},{"size":691,"mtime":1606475873352,"results":"15","hashOfConfig":"13"},{"size":10242,"mtime":1606607911624,"results":"16","hashOfConfig":"13"},{"size":3776,"mtime":1606478954403,"results":"17","hashOfConfig":"13"},{"size":506,"mtime":1606475733601,"results":"18","hashOfConfig":"13"},{"size":2566,"mtime":1606475933383,"results":"19","hashOfConfig":"13"},{"size":653,"mtime":1606475585014,"results":"20","hashOfConfig":"13"},{"size":284,"mtime":1606475805252,"results":"21","hashOfConfig":"13"},{"size":1809,"mtime":1606479201790,"results":"22","hashOfConfig":"13"},{"size":196,"mtime":1606475822320,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uowgbb",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\App.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\index.js",[],["53","54"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\welcome\\welcome.js",[],["55","56"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\listOfRecipes.js",["57","58","59","60","61"],"import React, { useState, useEffect } from \"react\";\r\nimport { getRecipies, getNutritions } from \"../../apiService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./listOfRecipes.css\";\r\n\r\nconst ListOfRecipes = (props) => {\r\n  props.headerState(\"true\");\r\n  const allRecipiesIds = [\r\n    639779,\r\n    644681,\r\n    640941,\r\n    641904,\r\n    664473,\r\n    639057,\r\n    653836,\r\n    657384,\r\n    715497,\r\n    647442,\r\n    632552,\r\n    640844,\r\n    642287,\r\n    632570,\r\n    1098387,\r\n    631880,\r\n    665012,\r\n    657178,\r\n    640767,\r\n    982365,\r\n    631756,\r\n    652284,\r\n    652332,\r\n    637932,\r\n    638568,\r\n    644094,\r\n    638832,\r\n    639303,\r\n    716211,\r\n    663985,\r\n    658517,\r\n    716426,\r\n    649504,\r\n    633293,\r\n    633251,\r\n    632101,\r\n    716411,\r\n    651958,\r\n    650939,\r\n    665779,\r\n    654663,\r\n    632502,\r\n    644693,\r\n    636328,\r\n    634703,\r\n    794351,\r\n    655098,\r\n    638940,\r\n    640827,\r\n    639594,\r\n    636271,\r\n    652513,\r\n    633786,\r\n    716437,\r\n    660297,\r\n    716367,\r\n    632250,\r\n    651409,\r\n    646906,\r\n    715378,\r\n    715419,\r\n    664488,\r\n    715407,\r\n    655098,\r\n    646906,\r\n    797177,\r\n    716377,\r\n    665303,\r\n    636601,\r\n    637832,\r\n    715421,\r\n    659929,\r\n    1098393,\r\n    715394,\r\n    716370,\r\n    645479,\r\n    633221,\r\n    715385,\r\n    654032,\r\n    716429,\r\n    633258,\r\n    633251,\r\n    647501,\r\n    652433,\r\n    716430,\r\n    648348,\r\n    639616,\r\n    631807,\r\n    643362,\r\n    640621,\r\n    634496,\r\n    645696,\r\n    646868,\r\n    645978\r\n  ];\r\n  let getRecipe = [];\r\n  let allNutritions = [];\r\n  const [recipies, updateRecipies] = useState([]);\r\n  const [nutritions, updateNutritions] = useState([]);\r\n  const [rangeFrom, updateRangeFrom] = useState(\"\");\r\n  const [rangeTo, updateRangeTo] = useState(\"\");\r\n  const [filteredList, updateFilteredList] = useState([]);\r\n  const [filterNutritionType, updateFilterNutritionType] = useState(\"all\");\r\n  const [category , updateCategory] = useState(\"all\");\r\n  let filterListOfRecipes = [];\r\n\r\n  const categorySelected = (e) => {\r\n    updateCategory(e.target.value);\r\n    let filterList = filteredList.filter( recipe => {\r\n      if(recipe.dishType.includes(e.target.value)){\r\n        return recipe;\r\n      } \r\n    });\r\n    updateFilteredList([...filterList]);\r\n  }\r\n\r\n  const filterList = (e) => {\r\n    updateRangeFrom(\"\");\r\n    updateRangeTo(\"\");\r\n    updateFilteredList([...recipies]);\r\n    updateFilterNutritionType(e.target.value);\r\n  };\r\n\r\n  const ListUpdatedWithRangeFrom = (e) => {\r\n    updateRangeFrom(e.target.value);\r\n   \r\n    if (rangeTo !== \"\") {\r\n      rangeToFunc(e.target.value,rangeTo);\r\n    } else {\r\n      rangeFromFunc(e.target.value);\r\n    }\r\n  };\r\n  const rangeFromFunc = (value) => {\r\n    nutritions.forEach((nutrition) => {\r\n      if (parseInt(nutrition.data[filterNutritionType]) >= value) {\r\n      \r\n        let filterRecipes = recipies.filter((recipe) => {\r\n          if (recipe.id === nutrition.id) {\r\n            return recipe;\r\n          }\r\n        });\r\n        filterListOfRecipes.push(filterRecipes[0]);\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n  };\r\n\r\n  const rangeToFunc = (from, to) => {\r\n    \r\n    nutritions.forEach((nutrition) => {\r\n      if (\r\n        parseInt(nutrition.data[filterNutritionType]) >= from &&\r\n        parseInt(nutrition.data[filterNutritionType]) <= to\r\n      ) {\r\n       \r\n        let filterRecipes =recipies.filter((recipe) => {\r\n         \r\n          if (recipe.id === nutrition.id) {\r\n           \r\n            return recipe;\r\n          }\r\n        });\r\n       \r\n        filterListOfRecipes.push(filterRecipes[0]);\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n  };\r\n  const listUpdatedWithRangeTo = (e) => {\r\n    updateRangeTo(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      rangeToFunc(rangeFrom , e.target.value);\r\n    } else {\r\n      rangeFromFunc(rangeFrom);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    JSON.parse(localStorage.getItem(\"recipiesArray\")) === null\r\n      ? allRecipiesIds.forEach((id) => {\r\n          getRecipies(id).then((data) => {\r\n            let recipeInfo = {\r\n              id: data.id,\r\n              title: data.title,\r\n              instructions: data.instructions,\r\n              image: data.image,\r\n              readyInMinutes: data.readyInMinutes,\r\n              servings: data.servings,\r\n              healthScore: data.healthScore,\r\n              diets: data.diets,\r\n              ingredients: data.extendedIngredients,\r\n              dishType: data.dishTypes\r\n            };\r\n            getRecipe.push(recipeInfo);\r\n            updateRecipies([...getRecipe]);\r\n            localStorage.setItem(\r\n              \"recipiesArray\",\r\n              JSON.stringify([...getRecipe])\r\n            );\r\n          });\r\n          getNutritions(id).then((data) => {\r\n            let nutritions = {\r\n              data,\r\n              id\r\n            };\r\n            allNutritions.push(nutritions);\r\n            updateNutritions([...allNutritions]);\r\n            localStorage.setItem(\r\n              \"nutritionsArray\",\r\n              JSON.stringify([...allNutritions])\r\n            );\r\n          });\r\n        })\r\n      : updateRecipies(JSON.parse(localStorage.getItem(\"recipiesArray\")));\r\n    updateNutritions(JSON.parse(localStorage.getItem(\"nutritionsArray\")));\r\n   updateFilteredList(JSON.parse(localStorage.getItem(\"recipiesArray\")));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <div id=\"heading-and-filter-container\">\r\n        <h1 id=\"list-title\">Recipies</h1>\r\n        <div id=\"filter-container\">\r\n          <div id=\"filter-by-nutrition-container\">\r\n            <div>\r\n              <span className=\"filter-span-text\">Filter by Nutritions :</span>\r\n              <select\r\n                id=\"select-nutrition-type\"\r\n                onChange={(e) => {\r\n                  filterList(e);\r\n                }}\r\n                className=\"select-nutrition-type\"\r\n              >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"calories\">Calories</option>\r\n                <option value=\"carbs\">Carbs</option>\r\n                <option value=\"protein\">Proteins</option>\r\n                <option value=\"fat\">Fats</option>\r\n              </select>\r\n            </div>\r\n            {filterNutritionType === \"all\" ? null : (\r\n              <div id=\"range-container\">\r\n                <span className=\"filter-span-text\"> Range : </span>\r\n                <input\r\n                  id=\"range-from-input\"\r\n                  className=\"range-input\"\r\n                  type=\"number\"\r\n                  placeholder=\"From\"\r\n                  maxLength={3}\r\n                  value={rangeFrom}\r\n                  onChange={(e) => ListUpdatedWithRangeFrom(e)}\r\n                />\r\n                <input\r\n                  className=\"range-input\"\r\n                  type=\"number\"\r\n                  placeholder=\"To\"\r\n                  maxLength={3}\r\n                  value={rangeTo}\r\n                  onChange={(e) => listUpdatedWithRangeTo(e)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <span className=\"filter-span-text\">Filter by Category : </span>\r\n            <select className=\"select-nutrition-type select-category\" value={category} onChange={ (e) =>{categorySelected(e)}}\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"breakfast\">Breakfast</option>\r\n              <option value=\"brunch\">Brunch</option>\r\n              <option value=\"lunch\">Lunch</option>\r\n              <option value=\"dinner\">Dinner</option>\r\n              <option value=\"side dish\">Side Dish</option>\r\n              <option value=\"dessert\">Dessert</option>\r\n              <option value=\"soup\">Soup</option>\r\n              <option value=\"salad\">Salad</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ul id=\"list-container\">\r\n    \r\n          { filteredList.map((recipe, index) => {\r\n           \r\n              let desiredNutritions = nutritions.filter((nutrition) => {\r\n                if (nutrition.id === recipe.id) {\r\n                  return nutrition.data;\r\n                }\r\n              });\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onSelectItem(filteredList[index], desiredNutritions);\r\n                  }}\r\n                  className=\"recipe-list\"\r\n                >\r\n                  <Link to=\"/recipeDetails\">\r\n                    <div className=\"main-info\">\r\n                      <h5 className=\"recipe-name\">{recipe.title}</h5>\r\n                      <small className=\"recipe-id\">{recipe.id}</small>\r\n                    </div>\r\n                    <div className=\"detail-container\">\r\n                      <img\r\n                        className=\"image-of-dish\"\r\n                        src={recipe.image}\r\n                        alt={recipe.title}\r\n                      />\r\n                      <div className=\"dish-details\">\r\n                        <span>Ready In Minutes : {recipe.readyInMinutes} </span>\r\n                        <span> Servings : {recipe.servings}</span>\r\n                        <span> Health Score : {recipe.healthScore} </span>\r\n                        {recipe.dishType.length !== 0 ? (\r\n                          <span>Dish Type : {recipe.dishType.map(dishtype => dishtype).join(\" \")}</span>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"dish-details\">\r\n                        <span>\r\n                          calories : {desiredNutritions[0].data.calories}\r\n                        </span>\r\n                        <span> carbs : {desiredNutritions[0].data.carbs} </span>\r\n                        <span>\r\n                          Proteins : {desiredNutritions[0].data.protein}\r\n                        </span>\r\n                        <span> Fats : {desiredNutritions[0].data.fat} </span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            }) \r\n          }}\r\n     \r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfRecipes;\r\n","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\recipeDetails\\recipeDetails.js",[],["62","63"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\options\\options.js",["64","65"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Options = () => {\r\n  const [optionSelected, updateOptionSelected] = useState(\"none\");\r\n  const selectedOption = (e) => {\r\n    updateOptionSelected(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n  return (\r\n    <div id=\"welcomePage-options-container\">\r\n      <Link to=\"/listOfRecipes\" id=\"view-recipe\">\r\n        View Recipes\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n",["66","67"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\categories\\categories.js",["68","69"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\apiService.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\header\\header.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\about\\about.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\tech-karo-files\\react\\foodiesta\\src\\components\\footer\\footer.js",[],["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":117,"column":50,"nodeType":"80","messageId":"81","endLine":117,"endColumn":52},{"ruleId":"78","severity":1,"message":"79","line":145,"column":54,"nodeType":"80","messageId":"81","endLine":145,"endColumn":56},{"ruleId":"78","severity":1,"message":"79","line":164,"column":53,"nodeType":"80","messageId":"81","endLine":164,"endColumn":55},{"ruleId":"82","severity":1,"message":"83","line":225,"column":6,"nodeType":"84","endLine":225,"endColumn":8,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"79","line":294,"column":69,"nodeType":"80","messageId":"81","endLine":294,"endColumn":71},{"ruleId":"72","replacedBy":"86"},{"ruleId":"74","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":24},{"ruleId":"88","severity":1,"message":"92","line":7,"column":9,"nodeType":"90","messageId":"91","endLine":7,"endColumn":23},{"ruleId":"72","replacedBy":"93"},{"ruleId":"74","replacedBy":"94"},{"ruleId":"88","severity":1,"message":"95","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"96","line":6,"column":7,"nodeType":"90","messageId":"91","endLine":6,"endColumn":23},{"ruleId":"72","replacedBy":"97"},{"ruleId":"74","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allNutritions', 'allRecipiesIds', and 'getRecipe'. Either include them or remove the dependency array.","ArrayExpression",["101"],["99"],["100"],"no-unused-vars","'optionSelected' is assigned a value but never used.","Identifier","unusedVar","'selectedOption' is assigned a value but never used.",["99"],["100"],"'Link' is defined but never used.","'categorySelected' is assigned a value but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [allNutritions, allRecipiesIds, getRecipe]",{"range":"104","text":"105"},[5392,5394],"[allNutritions, allRecipiesIds, getRecipe]"]