[{"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\App.js":"1","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\footer\\footer.js":"2","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\listOfRecipes.js":"3","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\filterComponent\\filterComponent.js":"4","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\li.js":"5","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\liRecipeDetails.js":"6","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\nutritionComponent.js":"7","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\context.js":"8","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\recipeDetails\\recipeDetails.js":"9","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\about\\about.js":"10","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\apiService.js":"11","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\options\\options.js":"12","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\filterComponent\\filterByNutrition.js":"13","C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\prepComponent.js":"14"},{"size":1634,"mtime":1607347518774,"results":"15","hashOfConfig":"16"},{"size":196,"mtime":1606475822320,"results":"17","hashOfConfig":"16"},{"size":8404,"mtime":1607418163109,"results":"18","hashOfConfig":"16"},{"size":508,"mtime":1607329596607,"results":"19","hashOfConfig":"16"},{"size":1529,"mtime":1607418666575,"results":"20","hashOfConfig":"16"},{"size":546,"mtime":1607417481061,"results":"21","hashOfConfig":"16"},{"size":885,"mtime":1607417521506,"results":"22","hashOfConfig":"16"},{"size":758,"mtime":1607416793147,"results":"23","hashOfConfig":"16"},{"size":3776,"mtime":1606478954403,"results":"24","hashOfConfig":"16"},{"size":1809,"mtime":1606479201790,"results":"25","hashOfConfig":"16"},{"size":653,"mtime":1608124190796,"results":"26","hashOfConfig":"16"},{"size":506,"mtime":1606475733601,"results":"27","hashOfConfig":"16"},{"size":2269,"mtime":1607330202234,"results":"28","hashOfConfig":"16"},{"size":560,"mtime":1607417504830,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s0icv",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\App.js",["60"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\footer\\footer.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\listOfRecipes.js",["61","62","63","64","65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport { getRecipies, getNutritions } from \"../../apiService\";\r\nimport \"./listOfRecipes.css\";\r\nimport FilterComponent from \"./filterComponent/filterComponent\";\r\nimport List from \"./list/list\";\r\nimport { Provider , ListProvider} from \"../../context\";\r\n\r\nconst ListOfRecipes = (props) => {\r\n  //to show header if listOf Recipe components mounts\r\n  props.headerState(\"true\");\r\n  const allRecipiesIds = [\r\n    639779,\r\n    644681,\r\n    640941,\r\n    641904,\r\n    664473,\r\n    639057,\r\n    653836,\r\n    657384,\r\n    715497,\r\n    647442,\r\n    632552,\r\n    640844,\r\n    642287,\r\n    632570,\r\n    1098387,\r\n    631880,\r\n    665012,\r\n    657178,\r\n    640767,\r\n    982365,\r\n    631756,\r\n    652284,\r\n    652332,\r\n    637932,\r\n    638568,\r\n    644094,\r\n    638832,\r\n    639303,\r\n    716211,\r\n    663985,\r\n    658517,\r\n    716426,\r\n    649504,\r\n    633293,\r\n    633251,\r\n    632101,\r\n    716411,\r\n    651958,\r\n    650939,\r\n    665779,\r\n    654663,\r\n    632502,\r\n    644693,\r\n    636328,\r\n    634703,\r\n    794351,\r\n    655098,\r\n    638940,\r\n    640827,\r\n    639594,\r\n    636271,\r\n    652513,\r\n    633786,\r\n    716437,\r\n    660297,\r\n    716367,\r\n    632250,\r\n    651409,\r\n    646906,\r\n    715378,\r\n    715419,\r\n    664488,\r\n    715407,\r\n    655098,\r\n    797177,\r\n    716377,\r\n    665303,\r\n    636601,\r\n    637832,\r\n    715421,\r\n    659929,\r\n    1098393,\r\n    715394,\r\n    716370,\r\n    645479,\r\n    633221\r\n    // 715385,\r\n    // 654032,\r\n    // 716429,\r\n    // 633258,\r\n    // 633251,\r\n    // 647501,\r\n    // 652433,\r\n    // 716430,\r\n    // 648348,\r\n    // 639616,\r\n    // 631807,\r\n    // 643362,\r\n    // 640621,\r\n    // 634496,\r\n    // 645696,\r\n    // 646868,\r\n    // 645978\r\n  ];\r\n  let getRecipe = [];\r\n  let allNutritions = [];\r\n  const [recipies, updateRecipies] = useState([]);\r\n  const [nutritions, updateNutritions] = useState([]);\r\n  const [rangeFrom, updateRangeFrom] = useState(\"\");\r\n  const [rangeTo, updateRangeTo] = useState(\"\");\r\n  const [filteredList, updateFilteredList] = useState([]);\r\n  const [filterNutritionType, updateFilterNutritionType] = useState(\"all\");\r\n  const [category , updateCategory] = useState(\"all\");\r\n  let filterListOfRecipes = [];\r\n  let categoryFilterList = []; //category filtered list variable\r\n  const [errorMsg, updateErrorMsg] = useState(\"\");\r\n\r\n\r\n  const categorySelected = (e) => {\r\n    updateCategory(e.target.value);\r\n    if(e.target.value === \"all\" && filterNutritionType === \"all\"){\r\n      updateFilteredList([...recipies]);\r\n    }else if(e.target.value === \"all\" && filterNutritionType !== \"all\"){\r\n     rangeToFunc(rangeFrom , rangeTo , e.target.value);\r\n    }else{\r\n      categoryFilterList = recipies.filter( recipe => {\r\n            if(recipe.dishType.includes(e.target.value)){\r\n              return recipe;\r\n            } \r\n          });\r\n          filterNutritionType === \"all\" ? updateFilteredList([...categoryFilterList]) : filteredListUpdate(e.target.value);\r\n    }\r\n  }\r\n  //below fiunction will be called if nutrition type value is not \"all\". and user selected category type \"all\".\r\n  // this function will show list a/c to nutrition type selected before selecting category.\r\n  const filteredListUpdate = (e) =>{\r\n   rangeToFunc(rangeFrom,rangeTo ,e); \r\n  }\r\n\r\n//filter list on selection of nutrition type\r\n  const filterList = (e) => {\r\n    updateRangeFrom(\"\");\r\n    updateRangeTo(\"\");\r\n    if(category === \"all\"){\r\n      updateFilteredList([...recipies]);\r\n    }\r\n    updateFilterNutritionType(e.target.value);\r\n  };\r\n\r\n\r\n  // update list of nutrition a/c to range from\r\n  const ListUpdatedWithRangeFrom = (e) => {\r\n    updateRangeFrom(e.target.value);\r\n    \r\n    if (rangeTo !== \"\") {\r\n      rangeToFunc(e.target.value,rangeTo, category);\r\n    } else {\r\n      rangeFromFunc(e.target.value);\r\n    }\r\n  };\r\n\r\n   // update list of nutrition a/c to range to\r\n  const listUpdatedWithRangeTo = (e) => {\r\n    updateRangeTo(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      rangeToFunc(rangeFrom , e.target.value,category);\r\n    } else {\r\n      rangeFromFunc(rangeFrom);\r\n    }\r\n  };\r\n\r\n  const rangeFromFunc = (value) => {\r\n    let filterRecipes = [];\r\n\r\n    nutritions.forEach((nutrition) => {\r\n      if (parseInt(nutrition.data[filterNutritionType]) >= value) {\r\n        if(category !== \"all\"){\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id && recipe.dishType.includes(category)) {\r\n              return recipe;\r\n            }\r\n          });\r\n          \r\n        }else{\r\n            filterRecipes = recipies.filter((recipe) => {\r\n              if (recipe.id === nutrition.id) {\r\n                return recipe;\r\n              }\r\n            });\r\n          }\r\n          if(filterRecipes.length !== 0){\r\n            filterListOfRecipes.push(filterRecipes[0]);\r\n          }\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n  };\r\n\r\n  const rangeToFunc = (from, to, e) => {\r\n    let filterRecipes = [];\r\n    nutritions.forEach((nutrition) => {\r\n      if (\r\n        parseInt(nutrition.data[filterNutritionType]) >= from &&\r\n        parseInt(nutrition.data[filterNutritionType]) <= to\r\n      ) {\r\n        if(e !== \"all\" ){\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id && recipe.dishType.includes(e)) {\r\n              return recipe;\r\n            }\r\n          });\r\n        }else{\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id) {\r\n              return recipe;\r\n            }\r\n          });\r\n        }\r\n        if(filterRecipes.length !== 0){\r\n          filterListOfRecipes.push(filterRecipes[0]);\r\n        }\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n    displayErrorMessage(from,to);\r\n  };\r\n const displayErrorMessage = (from,to) => {\r\n   if(from > to){\r\n    updateErrorMsg(\"Invalid range\");\r\n   }else if(from <= to && filterListOfRecipes.length === 0){\r\n    updateErrorMsg(\"No recipe in this range\");\r\n   }\r\n }\r\n \r\n  useEffect(() => {\r\n    JSON.parse(localStorage.getItem(\"recipesArray\")) === null\r\n      ? allRecipiesIds.forEach((id) => {\r\n          getRecipies(id).then((data) => {\r\n            let recipeInfo = {\r\n              id: data.id,\r\n              title: data.title,\r\n              instructions: data.instructions,\r\n              image: data.image,\r\n              readyInMinutes: data.readyInMinutes,\r\n              servings: data.servings,\r\n              healthScore: data.healthScore,\r\n              diets: data.diets,\r\n              ingredients: data.extendedIngredients,\r\n              dishType: data.dishTypes\r\n            };\r\n            getRecipe.push(recipeInfo);\r\n            updateRecipies([...getRecipe]);\r\n            localStorage.setItem(\r\n              \"recipesArray\",\r\n              JSON.stringify([...getRecipe])\r\n            );\r\n          });\r\n          getNutritions(id).then((data) => {\r\n            let nutritions = {\r\n              data,\r\n              id\r\n            };\r\n            allNutritions.push(nutritions);\r\n            updateNutritions([...allNutritions]);\r\n            localStorage.setItem(\r\n              \"nutritionArray\",\r\n              JSON.stringify([...allNutritions])\r\n            );\r\n          });\r\n        })\r\n      : updateRecipies(JSON.parse(localStorage.getItem(\"recipesArray\")));\r\n    updateNutritions(JSON.parse(localStorage.getItem(\"nutritionArray\")));\r\n   updateFilteredList(JSON.parse(localStorage.getItem(\"recipesArray\")));\r\n  }, []);\r\n\r\n  const filterVariables = {\r\n    category : category,\r\n    rangeFrom : rangeFrom,\r\n    rangeTo : rangeTo,\r\n    filterNutritionType : filterNutritionType\r\n  }\r\n  const filterMethods = {\r\n    categorySelected : categorySelected,\r\n    filterList : filterList,\r\n    ListUpdatedWithRangeFrom : ListUpdatedWithRangeFrom,\r\n    listUpdatedWithRangeTo : listUpdatedWithRangeTo\r\n  }\r\n\r\n  const filterVariableAndMethods = {\r\n    filterVariables,\r\n    filterMethods\r\n  }\r\n  const ListContext = {\r\n    filteredList,\r\n    nutritions\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Provider value = {filterVariableAndMethods}>\r\n        <FilterComponent />\r\n      </Provider>\r\n      { filteredList.length === 0 ? <p id=\"error-msg\">{errorMsg}</p> : null}\r\n      <ListProvider value = {ListContext}>\r\n        <List />\r\n      </ListProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfRecipes;\r\n",["67","68"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\filterComponent\\filterComponent.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\li.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\liRecipeDetails.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\nutritionComponent.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\context.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\recipeDetails\\recipeDetails.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\about\\about.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\apiService.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\options\\options.js",["69","70"],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\filterComponent\\filterByNutrition.js",[],"C:\\Users\\Zubi\\Desktop\\noreen-tech-work\\html-images\\tech-karo-files\\react\\foodiesta\\src\\components\\listOfRecipes\\list\\prepComponent.js",[],{"ruleId":"71","severity":1,"message":"72","line":49,"column":1,"nodeType":"73","messageId":"74","endLine":52,"endColumn":7},{"ruleId":"75","severity":1,"message":"76","line":127,"column":52,"nodeType":"77","messageId":"78","endLine":127,"endColumn":54},{"ruleId":"75","severity":1,"message":"76","line":179,"column":52,"nodeType":"77","messageId":"78","endLine":179,"endColumn":54},{"ruleId":"75","severity":1,"message":"76","line":186,"column":54,"nodeType":"77","messageId":"78","endLine":186,"endColumn":56},{"ruleId":"75","severity":1,"message":"76","line":208,"column":52,"nodeType":"77","messageId":"78","endLine":208,"endColumn":54},{"ruleId":"75","severity":1,"message":"76","line":214,"column":52,"nodeType":"77","messageId":"78","endLine":214,"endColumn":54},{"ruleId":"79","severity":1,"message":"80","line":275,"column":6,"nodeType":"81","endLine":275,"endColumn":8,"suggestions":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":7,"column":9,"nodeType":"89","messageId":"90","endLine":7,"endColumn":23},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allNutritions', 'allRecipiesIds', and 'getRecipe'. Either include them or remove the dependency array.","ArrayExpression",["92"],"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'optionSelected' is assigned a value but never used.","Identifier","unusedVar","'selectedOption' is assigned a value but never used.",{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [allNutritions, allRecipiesIds, getRecipe]",{"range":"97","text":"98"},[7504,7506],"[allNutritions, allRecipiesIds, getRecipe]"]