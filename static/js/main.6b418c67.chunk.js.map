{"version":3,"sources":["images/chef.png","components/header/header.js","components/footer/footer.js","images/foodiesta4.jpg","components/options/options.js","images/burger.jpeg","images/lasagnea.jpeg","images/roast.jpeg","images/brownDish.jpeg","components/about/about.js","components/categories/categories.js","components/welcome/welcome.js","apiService.js","components/listOfRecipes/listOfRecipes.js","components/recipeDetails/recipeDetails.js","App.js","index.js"],"names":["Header","className","src","chef","alt","id","Footer","Options","useState","to","About","roast","brownDish","lasagnea","burger","Categories","Welcome","headerState","foodiesta","apiKey","endPoints","ListOfRecipes","props","allRecipiesIds","getRecipe","allNutritions","recipies","updateRecipies","nutritions","updateNutritions","rangeFrom","updateRangeFrom","rangeTo","updateRangeTo","filteredList","updateFilteredList","filterNutritionType","updateFilterNutritionType","category","updateCategory","filterListOfRecipes","categoryFilterList","filteredListUpdate","e","rangeToFunc","rangeFromFunc","value","filterRecipes","forEach","nutrition","parseInt","data","filter","recipe","dishType","includes","length","push","from","console","log","useEffect","JSON","parse","localStorage","getItem","fetch","then","response","json","getRecipies","recipeInfo","title","instructions","image","readyInMinutes","servings","healthScore","diets","ingredients","extendedIngredients","dishTypes","setItem","stringify","getNutritions","onChange","target","filterList","type","placeholder","maxLength","ListUpdatedWithRangeFrom","listUpdatedWithRangeTo","categorySelected","map","index","desiredNutritions","onClick","onSelectItem","dishtype","join","calories","carbs","protein","fat","RecipeDetails","diet","ingredient","name","measures","metric","amount","unitShort","App","headerDisplay","setHeaderDisplay","state","selectedRecipe","updateRecipeSelection","selectedNutritions","path","exact","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"8OAAe,G,MAAA,IAA0B,kCCI5BA,EAAS,WACpB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,oBAAIC,GAAG,QAAP,2BCLOC,EAAS,WACpB,OACE,qBAAKL,UAAU,gCAAf,mCCLW,MAA0B,uCCI5BM,EAAU,WAAO,IAAD,EACoBC,mBAAS,QAD7B,6BAM3B,OACE,qBAAKH,GAAG,gCAAR,SACE,cAAC,IAAD,CAAMI,GAAG,iBAAiBJ,GAAG,cAA7B,6BCZS,MAA0B,oCCA1B,MAA0B,sCCA1B,MAA0B,mCCA1B,MAA0B,uCCU5BK,EAAQ,WACnB,OACE,sBAAKL,GAAG,kBAAR,UACE,oBAAIJ,UAAU,gBAAd,6BAEA,sBAAKI,GAAG,sBAAR,UACE,sBAAKJ,UAAU,oBAAf,UACE,qBAAKI,GAAG,kBAAkBH,IAAKS,EAAOP,IAAI,KAC1C,qBAAKC,GAAG,mBAAmBH,IAAKU,EAAWR,IAAI,QAEjD,oBAAGH,UAAU,YAAb,+DACqD,IACnD,kDAFF,wJAIoD,IAClD,2CALF,2BAKiD,IAC/C,gDANF,gCAM2D,IACzD,uEAPF,8EAQ4D,IAC1D,4CATF,yEAU0B,4CAV1B,2CAaA,sBAAKA,UAAU,oBAAf,UACE,qBAAKI,GAAG,kBAAkBH,IAAKW,EAAUT,IAAI,KAC7C,qBAAKC,GAAG,mBAAmBH,IAAKY,EAAQV,IAAI,eC/BzCW,EAAa,WAExB,OACE,sBAAKV,GAAG,oCAAR,UACE,oBAAIA,GAAG,kCAAP,yBACA,sBAAKA,GAAG,yBAAR,UACE,sBAAKJ,UAAU,kCAAf,UACE,qBACEC,IAAI,gOACJD,UAAU,iBACVG,IAAI,uBAEN,qBAAKH,UAAU,mBAAf,SACE,mBAAGA,UAAU,kBAAb,6CAKJ,sBAAKA,UAAU,kCAAf,UACE,qBACEC,IAAI,+EACJD,UAAU,iBACVG,IAAI,gBAEN,qBAAKH,UAAU,mBAAf,SACE,mBAAGA,UAAU,kBAAb,+BAKJ,sBAAKA,UAAU,kCAAf,UACE,qBACEC,IAAI,4IACJD,UAAU,iBACVG,IAAI,cAEN,qBAAKH,UAAU,mBAAf,SACE,mBAAGA,UAAU,kBAAb,2BAKJ,sBAAKA,UAAU,kCAAf,UACE,qBACEC,IAAI,sHACJD,UAAU,iBACVG,IAAI,SAEN,qBAAKH,UAAU,mBAAf,SACE,mBAAGA,UAAU,kBAAb,8BC7BGe,EAhBC,SAAC,GAEf,OADAC,EADmC,EAAlBA,aACL,SAEV,gCACE,sBAAKZ,GAAG,oBAAR,UACE,oBAAIA,GAAG,eAAP,uBACA,oBAAIJ,UAAU,uBAAd,+BACA,qBAAKI,GAAG,eAAeH,IAAKgB,EAAWd,IAAI,cAE3C,cAAC,EAAD,OAEF,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCnBAe,EAAS,mCACTC,EACS,uCADTA,EAEW,uCCkYFC,G,MAjYO,SAACC,GAErBA,EAAML,YAAY,QAClB,IAAMM,EAAiB,CACrB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEEC,EAAY,GACZC,EAAgB,GAnGW,EAoGIjB,mBAAS,IApGb,mBAoGxBkB,EApGwB,KAoGdC,EApGc,OAqGQnB,mBAAS,IArGjB,mBAqGxBoB,EArGwB,KAqGZC,EArGY,OAsGMrB,mBAAS,IAtGf,mBAsGxBsB,EAtGwB,KAsGbC,EAtGa,OAuGEvB,mBAAS,IAvGX,mBAuGxBwB,EAvGwB,KAuGfC,EAvGe,OAwGYzB,mBAAS,IAxGrB,mBAwGxB0B,EAxGwB,KAwGVC,EAxGU,OAyG0B3B,mBAAS,OAzGnC,mBAyGxB4B,EAzGwB,K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","file":"static/js/main.6b418c67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chef.30a98484.png\";","import React from \"react\";\r\nimport \"../welcome/welcome.css\";\r\nimport chef from \"../../images/chef.png\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"welcome-header\">\r\n      <img src={chef} alt=\"chef\" />\r\n      <h1 id=\"title\">Foodiesta</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"card-footer text-muted footer\">Copy rights Reserved</div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/foodiesta4.19392dd5.jpg\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Options = () => {\r\n  const [optionSelected, updateOptionSelected] = useState(\"none\");\r\n  const selectedOption = (e) => {\r\n    updateOptionSelected(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n  return (\r\n    <div id=\"welcomePage-options-container\">\r\n      <Link to=\"/listOfRecipes\" id=\"view-recipe\">\r\n        View Recipes\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/burger.25e1de51.jpeg\";","export default __webpack_public_path__ + \"static/media/lasagnea.bf3896d6.jpeg\";","export default __webpack_public_path__ + \"static/media/roast.f33acb96.jpeg\";","export default __webpack_public_path__ + \"static/media/brownDish.f47f673d.jpeg\";","import React from \"react\";\r\nimport \"../welcome/welcome.css\";\r\n// import iceCreams from \"../../images/ice-creams.jpg\";\r\nimport burger from \"../../images/burger.jpeg\";\r\nimport lasagnea from \"../../images/lasagnea.jpeg\";\r\nimport roast from \"../../images/roast.jpeg\";\r\n// import chef from \"../../images/chef.png\";\r\nimport brownDish from \"../../images/brownDish.jpeg\";\r\n// import bowlsImage from \"../../images/3bowlsImg.jpg\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div id=\"about-container\">\r\n      <h2 className=\"intro-heading\">About Foodiesta</h2>\r\n\r\n      <div id=\"about-sub-container\">\r\n        <div className=\"about-side-images\">\r\n          <img id=\"first-about-img\" src={roast} alt=\"\" />\r\n          <img id=\"second-about-img\" src={brownDish} alt=\"\" />\r\n        </div>\r\n        <p className=\"card_text\">\r\n          Foodiesta cares for your health thats why we share{\" \"}\r\n          <strong>health score</strong> of each recipe with you so you can\r\n          better take care of you and your family health. Foodiesta makes\r\n          selection of recipe easy specially for people who{\" \"}\r\n          <strong>diets</strong> by providing details of{\" \"}\r\n          <strong>nutritions</strong> of each recipe. You can find{\" \"}\r\n          <strong>calories, protein, carbs and fats</strong> which makes easy\r\n          for you to select perfect recipe for your health. You can{\" \"}\r\n          <strong>filter</strong> recipes according to calories, protein, fats\r\n          and carbs. You can also <strong>search</strong> your favorite recipes\r\n          by their name.\r\n        </p>\r\n        <div className=\"about-side-images\">\r\n          <img id=\"third-about-img\" src={lasagnea} alt=\"\" />\r\n          <img id=\"fourth-about-img\" src={burger} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Categories = () => {\r\n  let categorySelected = \"none\";\r\n  return (\r\n    <div id=\"main-images-description-container\">\r\n      <h2 id=\"images-description-holder-title\"> Categories</h2>\r\n      <div id=\"dishes-image-container\">\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/article_thumbnails/slideshows/best_and_worst_indian_dishes_for_your_health_slideshow/1800x1200_best_and_worst_indian_dishes_for_your_health_slideshow.jpg\"\r\n            className=\"categories-img\"\r\n            alt=\"gravy with chicken\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Lunch / Dinner / BreakFast</p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://i.pinimg.com/originals/11/b5/4e/11b54e28f3014e11e4726b62d8a8333e.jpg\"\r\n            className=\"categories-img\"\r\n            alt=\"green pasta\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Side Dishes </p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://i0.wp.com/www.missinthekitchen.com/wp-content/uploads/2019/02/Mint-Chocolate-Chip-Cheesecake-Recipe-Image.jpg?fit=650%2C433&ssl=1\"\r\n            className=\"categories-img\"\r\n            alt=\"ice cream\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Desserts</p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://sifu.unileversolutions.com/image/en-LK/recipe-topvisual/2/1260-709/chicken-and-sweet-corn-soup-50420400.jpg\"\r\n            className=\"categories-img\"\r\n            alt=\"soup\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Soup</p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport foodiesta from \"../../images/foodiesta4.jpg\";\r\nimport { Options } from \"../options/options.js\";\r\nimport { About } from \"../about/about.js\";\r\nimport { Categories } from \"../categories/categories.js\";\r\n\r\nimport \"./welcome.css\";\r\n\r\nconst Welcome = ({ headerState }) => {\r\n  headerState(\"false\");\r\n  return (\r\n    <div>\r\n      <div id=\"welcome-container\">\r\n        <h1 id=\"logo-heading\">Foodiesta</h1>\r\n        <h5 className=\"welcome-description \">Home of Recipies.</h5>\r\n        <img id=\"main-backImg\" src={foodiesta} alt=\"backImage\" />\r\n      \r\n        <Options />\r\n      </div>\r\n      <About />\r\n      <Categories />\r\n    </div>\r\n  );\r\n};\r\nexport default Welcome;\r\n","// const apiKey = \"8d9e82b0d2c84c178e6b28fb16dabdb0\";\r\nconst apiKey = \"742a50aee4bd4f4e8a5b5de5ac9989b2\";\r\nconst endPoints = {\r\n  getRecipies: \"https://api.spoonacular.com/recipes/\",\r\n  getNutritions: \"https://api.spoonacular.com/recipes/\"\r\n};\r\n\r\nexport const getRecipies = (id) => {\r\n  return fetch(`${endPoints.getRecipies}${id}/information?apiKey=${apiKey}`)\r\n    .then((response) => response.json())\r\n    .then((data) => data);\r\n};\r\n\r\nexport const getNutritions = (id) => {\r\n  return fetch(\r\n    `${endPoints.getNutritions}/${id}/nutritionWidget.json?apiKey=${apiKey}`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getRecipies, getNutritions } from \"../../apiService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./listOfRecipes.css\";\r\n\r\nconst ListOfRecipes = (props) => {\r\n  //to show header if listOf Recipe components mounts\r\n  props.headerState(\"true\");\r\n  const allRecipiesIds = [\r\n    639779,\r\n    644681,\r\n    640941,\r\n    641904,\r\n    664473,\r\n    639057,\r\n    653836,\r\n    657384,\r\n    715497,\r\n    647442,\r\n    632552,\r\n    640844,\r\n    642287,\r\n    632570,\r\n    1098387,\r\n    631880,\r\n    665012,\r\n    657178,\r\n    640767,\r\n    982365,\r\n    631756,\r\n    652284,\r\n    652332,\r\n    637932,\r\n    638568,\r\n    644094,\r\n    638832,\r\n    639303,\r\n    716211,\r\n    663985,\r\n    658517,\r\n    716426,\r\n    649504,\r\n    633293,\r\n    633251,\r\n    632101,\r\n    716411,\r\n    651958,\r\n    650939,\r\n    665779,\r\n    654663,\r\n    632502,\r\n    644693,\r\n    636328,\r\n    634703,\r\n    794351,\r\n    655098,\r\n    638940,\r\n    640827,\r\n    639594,\r\n    636271,\r\n    652513,\r\n    633786,\r\n    716437,\r\n    660297,\r\n    716367,\r\n    632250,\r\n    651409,\r\n    646906,\r\n    715378,\r\n    715419,\r\n    664488,\r\n    715407,\r\n    655098,\r\n    797177,\r\n    716377,\r\n    665303,\r\n    636601,\r\n    637832,\r\n    715421,\r\n    659929,\r\n    1098393,\r\n    715394,\r\n    716370,\r\n    645479,\r\n    633221,\r\n    715385,\r\n    654032,\r\n    716429,\r\n    633258,\r\n    633251,\r\n    647501,\r\n    652433,\r\n    716430,\r\n    648348,\r\n    639616,\r\n    631807,\r\n    643362,\r\n    640621,\r\n    634496,\r\n    645696,\r\n    646868,\r\n    645978\r\n  ];\r\n  let getRecipe = [];\r\n  let allNutritions = [];\r\n  const [recipies, updateRecipies] = useState([]);\r\n  const [nutritions, updateNutritions] = useState([]);\r\n  const [rangeFrom, updateRangeFrom] = useState(\"\");\r\n  const [rangeTo, updateRangeTo] = useState(\"\");\r\n  const [filteredList, updateFilteredList] = useState([]);\r\n  const [filterNutritionType, updateFilterNutritionType] = useState(\"all\");\r\n  const [category , updateCategory] = useState(\"all\");\r\n  let filterListOfRecipes = [];\r\n  let categoryFilterList = []; //category filtered list variable\r\n\r\n\r\n  const categorySelected = (e) => {\r\n    updateCategory(e.target.value);\r\n    if(e.target.value === \"all\" && filterNutritionType === \"all\"){\r\n      updateFilteredList([...recipies]);\r\n    }else if(e.target.value === \"all\" && filterNutritionType !== \"all\"){\r\n     rangeToFunc(rangeFrom , rangeTo , e.target.value);\r\n    }else{\r\n      categoryFilterList = recipies.filter( recipe => {\r\n            if(recipe.dishType.includes(e.target.value)){\r\n              return recipe;\r\n            } \r\n          });\r\n          filterNutritionType === \"all\" ? updateFilteredList([...categoryFilterList]) : filteredListUpdate(e.target.value);\r\n    }\r\n  }\r\n\r\n  //below fiunction will be called if nutrition type value is not \"all\". and user selected category type \"all\".\r\n  // this function will show list a/c to nutrition type selected before selecting category.\r\n  const filteredListUpdate = (e) =>{\r\n   rangeToFunc(rangeFrom,rangeTo ,e); \r\n  }\r\n\r\n//filter list on selection of nutrition type\r\n  const filterList = (e) => {\r\n    updateRangeFrom(\"\");\r\n    updateRangeTo(\"\");\r\n    console.log(category);\r\n    if(category === \"all\"){\r\n      updateFilteredList([...recipies]);\r\n    }\r\n    updateFilterNutritionType(e.target.value);\r\n  };\r\n\r\n\r\n  // update list of nutrition a/c to range from\r\n  const ListUpdatedWithRangeFrom = (e) => {\r\n    updateRangeFrom(e.target.value);\r\n    \r\n    if (rangeTo !== \"\") {\r\n      rangeToFunc(e.target.value,rangeTo, category);\r\n    } else {\r\n      rangeFromFunc(e.target.value);\r\n    }\r\n  };\r\n\r\n   // update list of nutrition a/c to range to\r\n  const listUpdatedWithRangeTo = (e) => {\r\n    updateRangeTo(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      rangeToFunc(rangeFrom , e.target.value,category);\r\n    } else {\r\n      rangeFromFunc(rangeFrom);\r\n    }\r\n  };\r\n\r\n  const rangeFromFunc = (value) => {\r\n    let filterRecipes = [];\r\n\r\n    nutritions.forEach((nutrition) => {\r\n      if (parseInt(nutrition.data[filterNutritionType]) >= value) {\r\n        if(category !== \"all\"){\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id && recipe.dishType.includes(category)) {\r\n              return recipe;\r\n            }\r\n          });\r\n          \r\n        }else{\r\n            filterRecipes = recipies.filter((recipe) => {\r\n              if (recipe.id === nutrition.id) {\r\n                return recipe;\r\n              }\r\n            });\r\n          }\r\n          if(filterRecipes.length !== 0){\r\n            filterListOfRecipes.push(filterRecipes[0]);\r\n          }\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n  };\r\n\r\n  const rangeToFunc = (from, to, e) => {\r\n    let filterRecipes = [];\r\n    nutritions.forEach((nutrition) => {\r\n      if (\r\n        parseInt(nutrition.data[filterNutritionType]) >= from &&\r\n        parseInt(nutrition.data[filterNutritionType]) <= to\r\n      ) {\r\n        console.log(e);\r\n        if(e !== \"all\" ){\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id && recipe.dishType.includes(e)) {\r\n              return recipe;\r\n            }\r\n          });\r\n        }else{\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id) {\r\n              return recipe;\r\n            }\r\n          });\r\n        }\r\n        if(filterRecipes.length !== 0){\r\n          filterListOfRecipes.push(filterRecipes[0]);\r\n        }\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n  };\r\n\r\n \r\n  useEffect(() => {\r\n    JSON.parse(localStorage.getItem(\"recipiesArray\")) === null\r\n      ? allRecipiesIds.forEach((id) => {\r\n          getRecipies(id).then((data) => {\r\n            let recipeInfo = {\r\n              id: data.id,\r\n              title: data.title,\r\n              instructions: data.instructions,\r\n              image: data.image,\r\n              readyInMinutes: data.readyInMinutes,\r\n              servings: data.servings,\r\n              healthScore: data.healthScore,\r\n              diets: data.diets,\r\n              ingredients: data.extendedIngredients,\r\n              dishType: data.dishTypes\r\n            };\r\n            getRecipe.push(recipeInfo);\r\n            updateRecipies([...getRecipe]);\r\n            localStorage.setItem(\r\n              \"recipiesArray\",\r\n              JSON.stringify([...getRecipe])\r\n            );\r\n          });\r\n          getNutritions(id).then((data) => {\r\n            let nutritions = {\r\n              data,\r\n              id\r\n            };\r\n            allNutritions.push(nutritions);\r\n            updateNutritions([...allNutritions]);\r\n            localStorage.setItem(\r\n              \"nutritionsArray\",\r\n              JSON.stringify([...allNutritions])\r\n            );\r\n          });\r\n        })\r\n      : updateRecipies(JSON.parse(localStorage.getItem(\"recipiesArray\")));\r\n    updateNutritions(JSON.parse(localStorage.getItem(\"nutritionsArray\")));\r\n   updateFilteredList(JSON.parse(localStorage.getItem(\"recipiesArray\")));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <div id=\"heading-and-filter-container\">\r\n        <h1 id=\"list-title\">Recipies</h1>\r\n        <div id=\"filter-container\">\r\n          <div id=\"filter-by-nutrition-container\">\r\n            <div>\r\n              <span className=\"filter-span-text\">Filter by Nutritions :</span>\r\n              <select\r\n                id=\"select-nutrition-type\"\r\n                onChange={(e) => {\r\n                  filterList(e);\r\n                }}\r\n                className=\"select-nutrition-type\"\r\n              >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"calories\">Calories</option>\r\n                <option value=\"carbs\">Carbs</option>\r\n                <option value=\"protein\">Proteins</option>\r\n                <option value=\"fat\">Fats</option>\r\n              </select>\r\n            </div>\r\n            {filterNutritionType === \"all\" ? null : (\r\n              <div id=\"range-container\">\r\n                <span className=\"filter-span-text\"> Range : </span>\r\n                <input\r\n                  id=\"range-from-input\"\r\n                  className=\"range-input\"\r\n                  type=\"number\"\r\n                  placeholder=\"From\"\r\n                  maxLength={3}\r\n                  value={rangeFrom}\r\n                  onChange={(e) => ListUpdatedWithRangeFrom(e)}\r\n                />\r\n                <input\r\n                  className=\"range-input\"\r\n                  type=\"number\"\r\n                  placeholder=\"To\"\r\n                  maxLength={3}\r\n                  value={rangeTo}\r\n                  onChange={(e) => listUpdatedWithRangeTo(e)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <span className=\"filter-span-text\">Filter by Category : </span>\r\n            <select className=\"select-nutrition-type select-category\" value={category} onChange={ (e) =>{categorySelected(e)}}\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"breakfast\">Breakfast</option>\r\n              <option value=\"brunch\">Brunch</option>\r\n              <option value=\"lunch\">Lunch</option>\r\n              <option value=\"dinner\">Dinner</option>\r\n              <option value=\"side dish\">Side Dish</option>\r\n              <option value=\"dessert\">Dessert</option>\r\n              <option value=\"soup\">Soup</option>\r\n              <option value=\"salad\">Salad</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ul id=\"list-container\">\r\n  \r\n          { filteredList.map((recipe, index) => {\r\n           \r\n              let desiredNutritions = nutritions.filter((nutrition) => {\r\n                if (nutrition.id === recipe.id) {\r\n                  return nutrition.data;\r\n                }\r\n              });\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onSelectItem(filteredList[index], desiredNutritions);\r\n                  }}\r\n                  className=\"recipe-list\"\r\n                >\r\n                  <Link to=\"/recipeDetails\">\r\n                    <div className=\"main-info\">\r\n                      <h5 className=\"recipe-name\">{recipe.title}</h5>\r\n                      <small className=\"recipe-id\">{recipe.id}</small>\r\n                    </div>\r\n                    <div className=\"detail-container\">\r\n                      <img\r\n                        className=\"image-of-dish\"\r\n                        src={recipe.image}\r\n                        alt={recipe.title}\r\n                      />\r\n                      <div className=\"dish-details\">\r\n                        <span>Ready In Minutes : {recipe.readyInMinutes} </span>\r\n                        <span> Servings : {recipe.servings}</span>\r\n                        <span> Health Score : {recipe.healthScore} </span>\r\n                        {recipe.dishType.length !== 0 ? (\r\n                          <span>Dish Type : {recipe.dishType.map(dishtype => dishtype).join(\" \")}</span>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"dish-details\">\r\n                        <span>\r\n                          calories : {desiredNutritions[0].data.calories}\r\n                        </span>\r\n                        <span> carbs : {desiredNutritions[0].data.carbs} </span>\r\n                        <span>\r\n                          Proteins : {desiredNutritions[0].data.protein}\r\n                        </span>\r\n                        <span> Fats : {desiredNutritions[0].data.fat} </span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            }) \r\n          }\r\n     \r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfRecipes;\r\n","import React from \"react\";\r\nimport \"./recipeDetails.css\";\r\n\r\nconst RecipeDetails = (props) => {\r\n  props.headerState(\"true\");\r\n  return (\r\n    <div className=\"list-group-item list-group-item-action detail-recipe-list\">\r\n      <h5 className=\"recipe-title\">{props.recipe.title}</h5>\r\n\r\n      <div className=\"main-recipe-container\">\r\n        <div>\r\n          <div id=\"dish-image-and-details\">\r\n            <div className=\"prep-nut-ing-container\">\r\n              <div id=\"preperation-and-nutritions-container\">\r\n                <div className=\"dish-detail-container prepeartion-details\">\r\n                  <h2 className=\"main-headings\">Preperation Details</h2>\r\n                  <div>\r\n                    <h3>Ready In Minutes : </h3>\r\n                    <span> {props.recipe.readyInMinutes}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Servings :</h3>\r\n                    <span> {props.recipe.servings} </span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Diets :</h3>\r\n                    <span>\r\n                      {props.recipe.diets.map((diet, index) => {\r\n                        return <span key={index}>{diet}, </span>;\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                  {props.recipe.dishType.length !== 0 ? (\r\n                    <div>\r\n                      <h3> Dish Type :</h3>\r\n                      {props.recipe.dishType.map((dishType) => {\r\n                        return <span>{dishType}</span>;\r\n                      })}\r\n                    </div>\r\n                  ) : null}\r\n                  <div>\r\n                    <h3> Health Score :</h3>\r\n                    <span> {props.recipe.healthScore} </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"dish-detail-container nutritions-details\">\r\n                  <h2 className=\"main-headings\">Nutritions Details</h2>\r\n                  <div>\r\n                    <h3> Calories :</h3>\r\n                    <span>{props.nutritions[0].data.calories}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Carbs :</h3>\r\n                    <span>{props.nutritions[0].data.carbs}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Proteins :</h3>\r\n                    <span>{props.nutritions[0].data.protein}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Fats :</h3>\r\n                    <span>{props.nutritions[0].data.fat}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"main-headings\"> Ingredients :</h3>\r\n                <ul id=\"ingredients-ul\">\r\n                  {props.recipe.ingredients.map((ingredient, index) => {\r\n                    return (\r\n                      <li key={index}>\r\n                        <img src={ingredient.image} alt=\"\" />\r\n                        <span>{ingredient.name}</span>\r\n                        <span>{ingredient.measures.metric.amount}</span>\r\n                        <span>{ingredient.measures.metric.unitShort}</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <img\r\n              className=\"pic-of-dish\"\r\n              src={props.recipe.image}\r\n              alt={props.recipe.title}\r\n            />\r\n          </div>\r\n          <div id=\"instruction-container\">\r\n            <h3 className=\"main-headings\"> Instructions:</h3>\r\n            <span id=\"instructions\">{props.recipe.instructions}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport { Header } from \"./components/header/header\";\nimport { Footer } from \"./components/footer/footer\";\nimport Welcome from \"./components/welcome/welcome\";\nimport ListOfRecipes  from \"./components/listOfRecipes/listOfRecipes\";\nimport RecipeDetails from \"./components/recipeDetails/recipeDetails\";\n\nexport default function App() {\n  const [headerDisplay, setHeaderDisplay] = useState(\"false\");\n  const headerState = (state) => {\n    setHeaderDisplay(state);\n  };\n\n  const [selectedRecipe, updateRecipeSelection] = useState(\"\");\n  const [selectedNutritions, updateNutritions] = useState(\"\");\n  const showSelectedItemDetail = (recipe, nutritions) => {\n    updateRecipeSelection(recipe);\n    updateNutritions(nutritions);\n  };\n  \n  return (\n    <BrowserRouter>\n        <Route path=\"/foodiesta\" exact>\n          <Welcome headerState={headerState} />\n        </Route>\n        {headerDisplay === \"false\" ? null : <Header />}\n        <Route path=\"/listOfRecipes\">\n          <ListOfRecipes\n            headerState={headerState}\n            onSelectItem={showSelectedItemDetail}\n          />\n        </Route>\n        <Route path=\"/recipeDetails\">\n          <RecipeDetails\n            headerState={headerState}\n            recipe={selectedRecipe}\n            nutritions={selectedNutritions}\n          />\n        </Route>\n        <Footer />\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}