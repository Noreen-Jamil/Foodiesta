{"version":3,"sources":["images/chef.png","components/header/header.js","components/footer/footer.js","images/burger.jpeg","images/lasagnea.jpeg","images/roast.jpeg","images/brownDish.jpeg","components/about/about.js","components/categories/categories.js","components/options/options.js","components/welcome/welcomeSession.js","components/welcome/welcome.js","apiService.js","context.js","components/listOfRecipes/filterComponent/filterByNutrition.js","components/listOfRecipes/filterComponent/filterByCategory.js","components/listOfRecipes/filterComponent/filterComponent.js","components/listOfRecipes/list/prepComponent.js","components/listOfRecipes/list/nutritionComponent.js","components/listOfRecipes/list/liRecipeDetails.js","components/listOfRecipes/list/recipeIdAndTitle.js","components/listOfRecipes/list/li.js","components/listOfRecipes/list/list.js","components/listOfRecipes/listOfRecipes.js","components/recipeDetails/recipeDetails.js","App.js","index.js"],"names":["Header","className","src","chef","alt","id","Footer","About","roast","brownDish","lasagnea","burger","Categories","Options","useState","to","WelcomeSession","props","appName","slogan","Welcome","headerState","apiKey","endPoints","filterContext","React","createContext","Provider","Consumer","listContext","ListProvider","ListConsumer","headContext","HeadProvider","HeadConsumer","filterListRecipeContext","RecipeProvider","RecipeConsumer","FilterByNutrition","filterVariables","filterMethods","onChange","e","filterList","value","filterNutritionType","type","placeholder","maxLength","rangeFrom","ListUpdatedWithRangeFrom","rangeTo","listUpdatedWithRangeTo","FilterByCategory","category","categorySelected","FilterComponent","PrepComponent","recipe","readyInMinutes","servings","healthScore","dishType","length","map","dishtype","join","NutritionComponent","desiredNutritions","data","calories","carbs","protein","fat","LiRecipeDeatils","image","title","RecipeIdAndTitle","Li","showSelectedItemDetail","filteredList","index","console","log","onClick","List","nutritions","filter","nutrition","ListOfRecipes","allRecipiesIds","getRecipe","allNutritions","recipies","updateRecipies","updateNutritions","updateRangeFrom","updateRangeTo","updateFilteredList","updateFilterNutritionType","updateCategory","filterListOfRecipes","categoryFilterList","errorMsg","updateErrorMsg","filteredListUpdate","rangeToFunc","rangeFromFunc","filterRecipes","forEach","parseInt","includes","push","from","displayErrorMessage","useEffect","JSON","parse","localStorage","getItem","fetch","then","response","json","getRecipies","recipeInfo","instructions","diets","ingredients","extendedIngredients","dishTypes","setItem","stringify","getNutritions","filterVariableAndMethods","target","ListContext","RecipeDetails","diet","ingredient","name","measures","metric","amount","unitShort","App","headerDisplay","setHeaderDisplay","state","selectedRecipe","updateRecipeSelection","selectedNutritions","path","exact","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a630a1f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chef.30a98484.png\";","import React from \"react\";\r\nimport \"../welcome/welcome.css\";\r\nimport chef from \"../../images/chef.png\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"welcome-header\">\r\n      <img src={chef} alt=\"chef\" />\r\n      <h1 id=\"title\">Foodiesta</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"card-footer text-muted footer\">Copy rights Reserved</div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/burger.25e1de51.jpeg\";","export default __webpack_public_path__ + \"static/media/lasagnea.bf3896d6.jpeg\";","export default __webpack_public_path__ + \"static/media/roast.f33acb96.jpeg\";","export default __webpack_public_path__ + \"static/media/brownDish.f47f673d.jpeg\";","import React from \"react\";\r\nimport \"../welcome/welcome.css\";\r\n// import iceCreams from \"../../images/ice-creams.jpg\";\r\nimport burger from \"../../images/burger.jpeg\";\r\nimport lasagnea from \"../../images/lasagnea.jpeg\";\r\nimport roast from \"../../images/roast.jpeg\";\r\n// import chef from \"../../images/chef.png\";\r\nimport brownDish from \"../../images/brownDish.jpeg\";\r\n// import bowlsImage from \"../../images/3bowlsImg.jpg\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div id=\"about-container\">\r\n      <h2 className=\"intro-heading\">About Foodiesta</h2>\r\n\r\n      <div id=\"about-sub-container\">\r\n        <div className=\"about-side-images\">\r\n          <img id=\"first-about-img\" src={roast} alt=\"\" />\r\n          <img id=\"second-about-img\" src={brownDish} alt=\"\" />\r\n        </div>\r\n        <p className=\"card_text\">\r\n          Foodiesta cares for your health thats why we share{\" \"}\r\n          <strong>health score</strong> of each recipe with you so you can\r\n          better take care of you and your family health. Foodiesta makes\r\n          selection of recipe easy specially for people who{\" \"}\r\n          <strong>diets</strong> by providing details of{\" \"}\r\n          <strong>nutritions</strong> of each recipe. You can find{\" \"}\r\n          <strong>calories, protein, carbs and fats</strong> which makes easy\r\n          for you to select perfect recipe for your health. You can{\" \"}\r\n          <strong>filter</strong> recipes according to calories, protein, fats\r\n          and carbs. You can also <strong>search</strong> your favorite recipes\r\n          by their name.\r\n        </p>\r\n        <div className=\"about-side-images\">\r\n          <img id=\"third-about-img\" src={lasagnea} alt=\"\" />\r\n          <img id=\"fourth-about-img\" src={burger} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Categories = () => {\r\n  let categorySelected = \"none\";\r\n  return (\r\n    <div id=\"main-images-description-container\">\r\n      <h2 id=\"images-description-holder-title\"> Categories</h2>\r\n      <div id=\"dishes-image-container\">\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/article_thumbnails/slideshows/best_and_worst_indian_dishes_for_your_health_slideshow/1800x1200_best_and_worst_indian_dishes_for_your_health_slideshow.jpg\"\r\n            className=\"categories-img\"\r\n            alt=\"gravy with chicken\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Lunch / Dinner / BreakFast</p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://i.pinimg.com/originals/11/b5/4e/11b54e28f3014e11e4726b62d8a8333e.jpg\"\r\n            className=\"categories-img\"\r\n            alt=\"green pasta\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Side Dishes </p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://i0.wp.com/www.missinthekitchen.com/wp-content/uploads/2019/02/Mint-Chocolate-Chip-Cheesecake-Recipe-Image.jpg?fit=650%2C433&ssl=1\"\r\n            className=\"categories-img\"\r\n            alt=\"ice cream\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Desserts</p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"image-and-description-container\">\r\n          <img\r\n            src=\"https://sifu.unileversolutions.com/image/en-LK/recipe-topvisual/2/1260-709/chicken-and-sweet-corn-soup-50420400.jpg\"\r\n            className=\"categories-img\"\r\n            alt=\"soup\"\r\n          />\r\n          <div className=\"card-description\">\r\n            <p className=\"card-image-text\">Soup</p>\r\n            {/* <span className=\"card-image-healthScore\">Health Score : 10</span> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../welcome/welcome.css\";\r\n\r\nexport const Options = () => {\r\n  const [optionSelected, updateOptionSelected] = useState(\"none\");\r\n  const selectedOption = (e) => {\r\n    updateOptionSelected(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n  return (\r\n    <div id=\"welcomePage-options-container\">\r\n      <Link to=\"/listOfRecipes\" id=\"view-recipe\">\r\n        View Recipes\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Options } from \"../options/options.js\";\r\n\r\nconst WelcomeSession = (props) => {\r\n    return (\r\n        <div id=\"welcome-container\">\r\n            <h1 id=\"logo-heading\">{props.appName}</h1>\r\n            <h5 className=\"welcome-description \">{props.slogan}</h5>\r\n            <Options />\r\n        </div>\r\n    )\r\n}\r\nexport default WelcomeSession;","import React from \"react\";\r\nimport { About } from \"../about/about.js\";\r\nimport { Categories } from \"../categories/categories.js\";\r\nimport WelcomeSession  from \"./welcomeSession.js\";\r\nimport \"./welcome.css\";\r\n\r\nconst Welcome = ({ headerState }) => {\r\n  headerState(\"false\");\r\n  return (\r\n    <div>\r\n      <WelcomeSession appName= \"Foodiesta\" slogan= \"Home Of Recipes\"/>\r\n      <About />\r\n      <Categories />\r\n    </div>\r\n  );\r\n};\r\nexport default Welcome;\r\n","// const apiKey = \"8d9e82b0d2c84c178e6b28fb16dabdb0\";\r\nconst apiKey = \"742a50aee4bd4f4e8a5b5de5ac9989b2\";\r\nconst endPoints = {\r\n  getRecipies: \"https://api.spoonacular.com/recipes/\",\r\n  getNutritions: \"https://api.spoonacular.com/recipes/\"\r\n};\r\n\r\nexport const getRecipies = (id) => {\r\n  return fetch(`${endPoints.getRecipies}${id}/information?apiKey=${apiKey}`)\r\n    .then((response) => response.json())\r\n    .then((data) => data);\r\n};\r\n\r\nexport const getNutritions = (id) => {\r\n  return fetch(\r\n    `${endPoints.getNutritions}/${id}/nutritionWidget.json?apiKey=${apiKey}`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data);\r\n};\r\n","\r\n//context api for filter components\r\nimport React from \"react\";\r\nconst filterContext = React.createContext();\r\nexport const Provider = filterContext.Provider;\r\nexport const Consumer = filterContext.Consumer;\r\n\r\n//context api for list\r\nconst listContext = React.createContext();\r\nexport const ListProvider = listContext.Provider;\r\nexport const ListConsumer = listContext.Consumer;\r\n\r\n// context api from app to grand childs\r\nconst headContext = React.createContext();\r\nexport const HeadProvider = headContext.Provider;\r\nexport const HeadConsumer = headContext.Consumer;\r\n\r\nconst filterListRecipeContext = React.createContext();\r\nexport const RecipeProvider = filterListRecipeContext.Provider;\r\nexport const RecipeConsumer = filterListRecipeContext.Consumer;","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\nimport { Consumer } from \"../../../context\";\r\n\r\nconst FilterByNutrition = () => {\r\n    return (\r\n       \r\n        <div id=\"filter-by-nutrition-container\">\r\n            <Consumer>\r\n            {({filterVariables , filterMethods}) => {\r\n                return( \r\n                    <>              \r\n                     <div>\r\n                    <span className=\"filter-span-text\">Filter by Nutritions :</span>\r\n                    <select\r\n                    id=\"select-nutrition-type\"\r\n                    onChange={(e) => {\r\n                        filterMethods.filterList(e);\r\n                    }}\r\n                    className=\"select-nutrition-type\"\r\n                    >\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"calories\">Calories</option>\r\n                    <option value=\"carbs\">Carbs</option>\r\n                    <option value=\"protein\">Proteins</option>\r\n                    <option value=\"fat\">Fats</option>\r\n                    </select>\r\n                </div>\r\n                {filterVariables.filterNutritionType === \"all\" ? null : (\r\n                    <div id=\"range-container\">\r\n                    <span className=\"filter-span-text\"> Range : </span>\r\n                    <input\r\n                        id=\"range-from-input\"\r\n                        className=\"range-input\"\r\n                        type=\"number\"\r\n                        placeholder=\"From\"\r\n                        maxLength={3}\r\n                        value={filterVariables.rangeFrom}\r\n                        onChange={(e) => filterMethods.ListUpdatedWithRangeFrom(e)}\r\n                    />\r\n                    <input\r\n                        className=\"range-input\"\r\n                        type=\"number\"\r\n                        placeholder=\"To\"\r\n                        maxLength={3}\r\n                        value={filterVariables.rangeTo}\r\n                        onChange={(e) => filterMethods.listUpdatedWithRangeTo(e)}\r\n                    />\r\n                    </div>\r\n                    \r\n                )}\r\n                </>)\r\n         \r\n            }}\r\n         </Consumer>\r\n         </div>\r\n\r\n    )\r\n}\r\nexport default FilterByNutrition;","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\nimport { Consumer } from \"../../../context\";\r\n \r\nconst FilterByCategory = () => {\r\n    return (\r\n        <Consumer>\r\n            {({filterVariables , filterMethods}) => {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <span className=\"filter-span-text\">Filter by Category : </span>\r\n                            <select className=\"select-nutrition-type select-category\" value={filterVariables.category} onChange={ (e) =>{filterMethods.categorySelected(e)}}\r\n                            >\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"breakfast\">Breakfast</option>\r\n                                <option value=\"brunch\">Brunch</option>\r\n                                <option value=\"lunch\">Lunch</option>\r\n                                <option value=\"dinner\">Dinner</option>\r\n                                <option value=\"side dish\">Side Dish</option>\r\n                                <option value=\"dessert\">Dessert</option>\r\n                                <option value=\"soup\">Soup</option>\r\n                                <option value=\"salad\">Salad</option>\r\n                            </select>\r\n                        </div>\r\n                    </>\r\n                )\r\n                 \r\n            }}\r\n         </Consumer>\r\n    )\r\n\r\n}\r\nexport default FilterByCategory;\r\n","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\nimport FilterByNutrition from \"./filterByNutrition\";\r\nimport FilterByCategory from \"./filterByCategory\";\r\n\r\nconst FilterComponent = () => {\r\n    return (\r\n        <div id=\"heading-and-filter-container\">\r\n            <h1 id=\"list-title\">Recipies</h1>\r\n            <div id=\"filter-container\">\r\n                <FilterByNutrition />\r\n                <FilterByCategory />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FilterComponent;\r\n","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\n\r\nconst PrepComponent = ({recipe}) => {\r\n    return (\r\n        <div className=\"dish-details\">\r\n            <span>Ready In Minutes : {recipe.readyInMinutes} </span>\r\n            <span> Servings : {recipe.servings}</span>\r\n            <span> Health Score : {recipe.healthScore} </span>\r\n            {recipe.dishType.length !== 0 ? (\r\n            <span>Dish Type : {recipe.dishType.map(dishtype => dishtype).join(\" \")}</span>\r\n            ) : null}\r\n      </div>\r\n    )\r\n}\r\nexport default PrepComponent;","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\nimport { RecipeConsumer } from \"../../../context\";\r\n\r\nconst NutritionComponent = () => {\r\n    return (\r\n       \r\n           <RecipeConsumer>\r\n                {({desiredNutritions}) => {\r\n                  return (\r\n                    <div className=\"dish-details\">\r\n                    <span>\r\n                      calories : {desiredNutritions[0].data.calories}\r\n                    </span>\r\n                    <span> carbs : {desiredNutritions[0].data.carbs} </span>\r\n                    <span>\r\n                      Proteins : {desiredNutritions[0].data.protein}\r\n                    </span>\r\n                    <span> Fats : {desiredNutritions[0].data.fat} </span>\r\n                  </div>\r\n                  )\r\n                }}\r\n            </RecipeConsumer>\r\n      \r\n    )\r\n}\r\nexport default NutritionComponent;","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\nimport PrepComponent from \"./prepComponent\";\r\nimport NutritionComponent from \"./nutritionComponent\";\r\n\r\nconst LiRecipeDeatils = ({recipe}) => {\r\n    return (\r\n        <div className=\"detail-container\">\r\n            <img\r\n              className=\"image-of-dish\"\r\n              src={recipe.image}\r\n              alt={recipe.title}\r\n            />\r\n           <PrepComponent recipe = {recipe} />\r\n           <NutritionComponent />\r\n        </div>\r\n    )\r\n}\r\nexport default LiRecipeDeatils;","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\n\r\nconst RecipeIdAndTitle = ({recipe}) => {\r\n    return (\r\n        <div className=\"main-info\">     \r\n            <h5 className=\"recipe-name\">{recipe.title}</h5>\r\n            <small className=\"recipe-id\">{recipe.id}</small>\r\n        </div>\r\n    )\r\n}\r\nexport default RecipeIdAndTitle;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../listOfRecipes.css\";\r\nimport LiRecipeDetails from \"./liRecipeDetails\";\r\nimport RecipeIdAndTitle from \"./recipeIdAndTitle\";\r\nimport {HeadConsumer, RecipeConsumer} from \"../../../context\";\r\n\r\nconst Li = () =>{\r\n    return (\r\n        <HeadConsumer>\r\n            { (showSelectedItemDetail) => {\r\n                return (\r\n                    <RecipeConsumer>\r\n                    { ({filteredList, desiredNutritions , index}) => {\r\n                            console.log(filteredList[index].id);\r\n                        return (\r\n                            <li\r\n                         key={index}\r\n                         onClick={() => {\r\n                         showSelectedItemDetail(filteredList[index], desiredNutritions);\r\n                         }}\r\n                         className=\"recipe-list\"\r\n                     >\r\n                         <Link to=\"/recipeDetails\">\r\n                            \r\n                                <RecipeIdAndTitle recipe= {filteredList[index]}/>\r\n                                <LiRecipeDetails  recipe = {filteredList[index]}/>\r\n                       \r\n                         {/* <LiRecipeDetails desiredNutritions = {desiredNutritions} /> */}\r\n                         </Link>\r\n                     </li>\r\n                        )\r\n                    }}\r\n                </RecipeConsumer>\r\n                )\r\n            }}\r\n        </HeadConsumer>\r\n       \r\n    )\r\n}\r\nexport default Li;","import React from \"react\";\r\nimport \"../listOfRecipes.css\";\r\nimport Li from \"./li\";\r\nimport {RecipeProvider , ListConsumer} from \"../../../context\";\r\n\r\nconst List = () => {\r\n    return (\r\n        <ListConsumer>\r\n        { ({filteredList , nutritions}) => {\r\n            return (\r\n                <ul id=\"list-container\">\r\n                { filteredList.map((recipe, index) => {\r\n                    let desiredNutritions = nutritions.filter((nutrition) => {\r\n                    if (nutrition.id === recipe.id) {\r\n                        return nutrition.data;\r\n                    }\r\n                    });\r\n                    return (\r\n                        //make provider of desirednutritions and in value attribute pass multi valus using object\r\n                        <RecipeProvider value = {\r\n                            {\r\n                                filteredList,\r\n                                desiredNutritions,\r\n                                index\r\n                            }\r\n                        }>\r\n                             <Li />\r\n                             {/* <Li desiredNutritions = {desiredNutritions} index={index}/> */}\r\n                        </RecipeProvider>\r\n                    );\r\n                }) \r\n                }\r\n        \r\n            </ul>\r\n            )\r\n       \r\n        }}\r\n        </ListConsumer>\r\n    )\r\n}\r\nexport default List;","import React, { useState, useEffect } from \"react\";\r\nimport { getRecipies, getNutritions } from \"../../apiService\";\r\nimport \"./listOfRecipes.css\";\r\nimport FilterComponent from \"./filterComponent/filterComponent\";\r\nimport List from \"./list/list\";\r\nimport { Provider , ListProvider} from \"../../context\";\r\n\r\nconst ListOfRecipes = (props) => {\r\n  //to show header if listOf Recipe components mounts\r\n  props.headerState(\"true\");\r\n  const allRecipiesIds = [\r\n    639779,\r\n    644681,\r\n    640941,\r\n    641904,\r\n    664473,\r\n    639057,\r\n    653836,\r\n    657384,\r\n    715497,\r\n    647442,\r\n    632552,\r\n    640844,\r\n    642287,\r\n    632570,\r\n    1098387,\r\n    631880,\r\n    665012,\r\n    657178,\r\n    640767,\r\n    982365,\r\n    631756,\r\n    652284,\r\n    652332,\r\n    637932,\r\n    638568,\r\n    644094,\r\n    638832,\r\n    639303,\r\n    716211,\r\n    663985,\r\n    658517,\r\n    716426,\r\n    649504,\r\n    633293,\r\n    633251,\r\n    632101,\r\n    716411,\r\n    651958,\r\n    650939,\r\n    665779,\r\n    654663,\r\n    632502,\r\n    644693,\r\n    636328,\r\n    634703,\r\n    794351,\r\n    655098,\r\n    638940,\r\n    640827,\r\n    639594,\r\n    636271,\r\n    652513,\r\n    633786,\r\n    716437,\r\n    660297,\r\n    716367,\r\n    632250,\r\n    651409,\r\n    646906,\r\n    715378,\r\n    715419,\r\n    664488,\r\n    715407,\r\n    655098,\r\n    797177,\r\n    716377,\r\n    665303,\r\n    636601,\r\n    637832,\r\n    715421,\r\n    659929,\r\n    1098393,\r\n    715394,\r\n    716370,\r\n    645479,\r\n    633221\r\n    // 715385,\r\n    // 654032,\r\n    // 716429,\r\n    // 633258,\r\n    // 633251,\r\n    // 647501,\r\n    // 652433,\r\n    // 716430,\r\n    // 648348,\r\n    // 639616,\r\n    // 631807,\r\n    // 643362,\r\n    // 640621,\r\n    // 634496,\r\n    // 645696,\r\n    // 646868,\r\n    // 645978\r\n  ];\r\n  let getRecipe = [];\r\n  let allNutritions = [];\r\n  const [recipies, updateRecipies] = useState([]);\r\n  const [nutritions, updateNutritions] = useState([]);\r\n  const [rangeFrom, updateRangeFrom] = useState(\"\");\r\n  const [rangeTo, updateRangeTo] = useState(\"\");\r\n  const [filteredList, updateFilteredList] = useState([]);\r\n  const [filterNutritionType, updateFilterNutritionType] = useState(\"all\");\r\n  const [category , updateCategory] = useState(\"all\");\r\n  let filterListOfRecipes = [];\r\n  let categoryFilterList = []; //category filtered list variable\r\n  const [errorMsg, updateErrorMsg] = useState(\"\");\r\n\r\n\r\n  const categorySelected = (e) => {\r\n    updateCategory(e.target.value);\r\n    if(e.target.value === \"all\" && filterNutritionType === \"all\"){\r\n      updateFilteredList([...recipies]);\r\n    }else if(e.target.value === \"all\" && filterNutritionType !== \"all\"){\r\n     rangeToFunc(rangeFrom , rangeTo , e.target.value);\r\n    }else{\r\n      categoryFilterList = recipies.filter( recipe => {\r\n            if(recipe.dishType.includes(e.target.value)){\r\n              return recipe;\r\n            } \r\n          });\r\n          filterNutritionType === \"all\" ? updateFilteredList([...categoryFilterList]) : filteredListUpdate(e.target.value);\r\n    }\r\n  }\r\n  //below fiunction will be called if nutrition type value is not \"all\". and user selected category type \"all\".\r\n  // this function will show list a/c to nutrition type selected before selecting category.\r\n  const filteredListUpdate = (e) =>{\r\n   rangeToFunc(rangeFrom,rangeTo ,e); \r\n  }\r\n\r\n//filter list on selection of nutrition type\r\n  const filterList = (e) => {\r\n    updateRangeFrom(\"\");\r\n    updateRangeTo(\"\");\r\n    if(category === \"all\"){\r\n      updateFilteredList([...recipies]);\r\n    }\r\n    updateFilterNutritionType(e.target.value);\r\n  };\r\n\r\n\r\n  // update list of nutrition a/c to range from\r\n  const ListUpdatedWithRangeFrom = (e) => {\r\n    updateRangeFrom(e.target.value);\r\n    \r\n    if (rangeTo !== \"\") {\r\n      rangeToFunc(e.target.value,rangeTo, category);\r\n    } else {\r\n      rangeFromFunc(e.target.value);\r\n    }\r\n  };\r\n\r\n   // update list of nutrition a/c to range to\r\n  const listUpdatedWithRangeTo = (e) => {\r\n    updateRangeTo(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      rangeToFunc(rangeFrom , e.target.value,category);\r\n    } else {\r\n      rangeFromFunc(rangeFrom);\r\n    }\r\n  };\r\n\r\n  const rangeFromFunc = (value) => {\r\n    let filterRecipes = [];\r\n\r\n    nutritions.forEach((nutrition) => {\r\n      if (parseInt(nutrition.data[filterNutritionType]) >= value) {\r\n        if(category !== \"all\"){\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id && recipe.dishType.includes(category)) {\r\n              return recipe;\r\n            }\r\n          });\r\n          \r\n        }else{\r\n            filterRecipes = recipies.filter((recipe) => {\r\n              if (recipe.id === nutrition.id) {\r\n                return recipe;\r\n              }\r\n            });\r\n          }\r\n          if(filterRecipes.length !== 0){\r\n            filterListOfRecipes.push(filterRecipes[0]);\r\n          }\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n  };\r\n\r\n  const rangeToFunc = (from, to, e) => {\r\n    let filterRecipes = [];\r\n    nutritions.forEach((nutrition) => {\r\n      if (\r\n        parseInt(nutrition.data[filterNutritionType]) >= from &&\r\n        parseInt(nutrition.data[filterNutritionType]) <= to\r\n      ) {\r\n        if(e !== \"all\" ){\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id && recipe.dishType.includes(e)) {\r\n              return recipe;\r\n            }\r\n          });\r\n        }else{\r\n          filterRecipes = recipies.filter((recipe) => {\r\n            if (recipe.id === nutrition.id) {\r\n              return recipe;\r\n            }\r\n          });\r\n        }\r\n        if(filterRecipes.length !== 0){\r\n          filterListOfRecipes.push(filterRecipes[0]);\r\n        }\r\n      }\r\n    });\r\n    updateFilteredList([...filterListOfRecipes]);\r\n    displayErrorMessage(from,to);\r\n  };\r\n const displayErrorMessage = (from,to) => {\r\n   if(from > to){\r\n    updateErrorMsg(\"Invalid range\");\r\n   }else if(from <= to && filterListOfRecipes.length === 0){\r\n    updateErrorMsg(\"No recipe in this range\");\r\n   }\r\n }\r\n \r\n  useEffect(() => {\r\n    JSON.parse(localStorage.getItem(\"recipesArray\")) === null\r\n      ? allRecipiesIds.forEach((id) => {\r\n          getRecipies(id).then((data) => {\r\n            let recipeInfo = {\r\n              id: data.id,\r\n              title: data.title,\r\n              instructions: data.instructions,\r\n              image: data.image,\r\n              readyInMinutes: data.readyInMinutes,\r\n              servings: data.servings,\r\n              healthScore: data.healthScore,\r\n              diets: data.diets,\r\n              ingredients: data.extendedIngredients,\r\n              dishType: data.dishTypes\r\n            };\r\n            getRecipe.push(recipeInfo);\r\n            updateRecipies([...getRecipe]);\r\n            localStorage.setItem(\r\n              \"recipesArray\",\r\n              JSON.stringify([...getRecipe])\r\n            );\r\n          });\r\n          getNutritions(id).then((data) => {\r\n            let nutritions = {\r\n              data,\r\n              id\r\n            };\r\n            allNutritions.push(nutritions);\r\n            updateNutritions([...allNutritions]);\r\n            localStorage.setItem(\r\n              \"nutritionArray\",\r\n              JSON.stringify([...allNutritions])\r\n            );\r\n          });\r\n        })\r\n      : updateRecipies(JSON.parse(localStorage.getItem(\"recipesArray\")));\r\n    updateNutritions(JSON.parse(localStorage.getItem(\"nutritionArray\")));\r\n   updateFilteredList(JSON.parse(localStorage.getItem(\"recipesArray\")));\r\n  }, []);\r\n\r\n  const filterVariables = {\r\n    category : category,\r\n    rangeFrom : rangeFrom,\r\n    rangeTo : rangeTo,\r\n    filterNutritionType : filterNutritionType\r\n  }\r\n  const filterMethods = {\r\n    categorySelected : categorySelected,\r\n    filterList : filterList,\r\n    ListUpdatedWithRangeFrom : ListUpdatedWithRangeFrom,\r\n    listUpdatedWithRangeTo : listUpdatedWithRangeTo\r\n  }\r\n\r\n  const filterVariableAndMethods = {\r\n    filterVariables,\r\n    filterMethods\r\n  }\r\n  const ListContext = {\r\n    filteredList,\r\n    nutritions\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Provider value = {filterVariableAndMethods}>\r\n        <FilterComponent />\r\n      </Provider>\r\n      { filteredList.length === 0 ? <p id=\"error-msg\">{errorMsg}</p> : null}\r\n      <ListProvider value = {ListContext}>\r\n        <List />\r\n      </ListProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfRecipes;\r\n","import React from \"react\";\r\nimport \"./recipeDetails.css\";\r\n\r\nconst RecipeDetails = (props) => {\r\n  props.headerState(\"true\");\r\n  return (\r\n    <div className=\"list-group-item list-group-item-action detail-recipe-list\">\r\n      <h5 className=\"recipe-title\">{props.recipe.title}</h5>\r\n\r\n      <div className=\"main-recipe-container\">\r\n        <div>\r\n          <div id=\"dish-image-and-details\">\r\n            <div className=\"prep-nut-ing-container\">\r\n              <div id=\"preperation-and-nutritions-container\">\r\n                <div className=\"dish-detail-container prepeartion-details\">\r\n                  <h2 className=\"main-headings\">Preperation Details</h2>\r\n                  <div>\r\n                    <h3>Ready In Minutes : </h3>\r\n                    <span> {props.recipe.readyInMinutes}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Servings :</h3>\r\n                    <span> {props.recipe.servings} </span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Diets :</h3>\r\n                    <span>\r\n                      {props.recipe.diets.map((diet, index) => {\r\n                        return <span key={index}>{diet}, </span>;\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                  {props.recipe.dishType.length !== 0 ? (\r\n                    <div>\r\n                      <h3> Dish Type :</h3>\r\n                      {props.recipe.dishType.map((dishType) => {\r\n                        return <span>{dishType}</span>;\r\n                      })}\r\n                    </div>\r\n                  ) : null}\r\n                  <div>\r\n                    <h3> Health Score :</h3>\r\n                    <span> {props.recipe.healthScore} </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"dish-detail-container nutritions-details\">\r\n                  <h2 className=\"main-headings\">Nutritions Details</h2>\r\n                  <div>\r\n                    <h3> Calories :</h3>\r\n                    <span>{props.nutritions[0].data.calories}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Carbs :</h3>\r\n                    <span>{props.nutritions[0].data.carbs}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Proteins :</h3>\r\n                    <span>{props.nutritions[0].data.protein}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3> Fats :</h3>\r\n                    <span>{props.nutritions[0].data.fat}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"main-headings\"> Ingredients :</h3>\r\n                <ul id=\"ingredients-ul\">\r\n                  {props.recipe.ingredients.map((ingredient, index) => {\r\n                    return (\r\n                      <li key={index}>\r\n                        <img src={ingredient.image} alt=\"\" />\r\n                        <span>{ingredient.name}</span>\r\n                        <span>{ingredient.measures.metric.amount}</span>\r\n                        <span>{ingredient.measures.metric.unitShort}</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <img\r\n              className=\"pic-of-dish\"\r\n              src={props.recipe.image}\r\n              alt={props.recipe.title}\r\n            />\r\n          </div>\r\n          <div id=\"instruction-container\">\r\n            <h3 className=\"main-headings\"> Instructions:</h3>\r\n            <span id=\"instructions\">{props.recipe.instructions}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport { Header } from \"./components/header/header\";\nimport { Footer } from \"./components/footer/footer\";\nimport Welcome from \"./components/welcome/welcome\";\nimport ListOfRecipes  from \"./components/listOfRecipes/listOfRecipes\";\nimport RecipeDetails from \"./components/recipeDetails/recipeDetails\";\nimport { HeadProvider } from \"./context\";\n\nexport default function App() {\n  const [headerDisplay, setHeaderDisplay] = useState(\"false\");\n  const headerState = (state) => {\n    setHeaderDisplay(state);\n  };\n\n  const [selectedRecipe, updateRecipeSelection] = useState(\"\");\n  const [selectedNutritions, updateNutritions] = useState(\"\");\n  const showSelectedItemDetail = (recipe, nutritions) => {\n    updateRecipeSelection(recipe);\n    updateNutritions(nutritions);\n  };\n\n  return (\n    <BrowserRouter>\n        <Route path=\"/foodiesta\" exact>\n          <Welcome headerState={headerState} />\n        </Route>\n        {headerDisplay === \"false\" ? null : <Header />}\n        <Route path=\"/listOfRecipes\">\n          <HeadProvider value={showSelectedItemDetail}>\n            <ListOfRecipes\n              headerState={headerState}\n            />\n          </HeadProvider>\n         \n        </Route>\n        <Route path=\"/recipeDetails\">\n          <RecipeDetails\n            headerState={headerState}\n            recipe={selectedRecipe}\n            nutritions={selectedNutritions}\n          />\n        </Route>\n        <Footer />\n    </BrowserRouter>\n  );\n}\n\n{/* <ListOfRecipes\nheaderState={headerState}\nonSelectItem={showSelectedItemDetail}\n/> */}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}